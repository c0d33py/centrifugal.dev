"use strict";(self.webpackChunkcentrifugal_dev=self.webpackChunkcentrifugal_dev||[]).push([[2069],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),k=r,f=d["".concat(c,".").concat(k)]||d[k]||u[k]||a;return n?o.createElement(f,i(i({ref:t},p),{},{components:n})):o.createElement(f,i({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},60513:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var o=n(87462),r=(n(67294),n(3905));const a={id:"tips_and_tricks",sidebar_label:"Appx #2: tips and tricks",title:"Appendix #2: Tips and tricks"},i=void 0,s={unversionedId:"tutorial/tips_and_tricks",id:"tutorial/tips_and_tricks",title:"Appendix #2: Tips and tricks",description:"Making this tutorial took quite a lot of time for us. We want to collect some useful tips and tricks here for those who decide to play with the final example. Feel free to contribute if you find something which could help others.",source:"@site/docs/tutorial/tips_and_tricks.md",sourceDirName:"tutorial",slug:"/tutorial/tips_and_tricks",permalink:"/docs/tutorial/tips_and_tricks",draft:!1,editUrl:"https://github.com/centrifugal/centrifugal.dev/edit/main/docs/tutorial/tips_and_tricks.md",tags:[],version:"current",frontMatter:{id:"tips_and_tricks",sidebar_label:"Appx #2: tips and tricks",title:"Appendix #2: Tips and tricks"},sidebar:"Tutorial",previous:{title:"Appx #1: possible improvements",permalink:"/docs/tutorial/improvements"}},c={},l=[{value:"Point to Centrifugo running on host (outside Docker)",id:"point-to-centrifugo-running-on-host-outside-docker",level:2},{value:"Connect to PosgreSQL",id:"connect-to-posgresql",level:2},{value:"Inspect dockerized Kafka state",id:"inspect-dockerized-kafka-state",level:2},{value:"Pause Kafka Connect",id:"pause-kafka-connect",level:2}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Making this tutorial took quite a lot of time for us. We want to collect some useful tips and tricks here for those who decide to play with the final example. Feel free to contribute if you find something which could help others."),(0,r.kt)("h2",{id:"point-to-centrifugo-running-on-host-outside-docker"},"Point to Centrifugo running on host (outside Docker)"),(0,r.kt)("p",null,"We did this ourselves while experimenting and measuring latency numbers in different scenarios. If you want to run the example, but need to point backend or Nginx to look at Centrifugo on your machine outside Docker, then you can use:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"On Linux run ",(0,r.kt)("inlineCode",{parentName:"li"},"ifconfig")," and find ",(0,r.kt)("inlineCode",{parentName:"li"},"docker0")," interface \u2013 use its ip address to point to Centrifugo. In our case it was ",(0,r.kt)("inlineCode",{parentName:"li"},"172.17.0.1"),", so we pointed Nginx to ",(0,r.kt)("inlineCode",{parentName:"li"},"172.17.0.1:8000")," upstream (Centrifugo runs on port 8000 by default), and in Django code used ",(0,r.kt)("inlineCode",{parentName:"li"},"http://172.17.0.1:8000/api/broadcast")," endpoint. Also, make sure you are using ",(0,r.kt)("inlineCode",{parentName:"li"},'"address": "0.0.0.0"')," in Centrifugo configuration"),(0,r.kt)("li",{parentName:"ul"},"On Macos \u2013 use ",(0,r.kt)("inlineCode",{parentName:"li"},"host.docker.internal")," special name, i.e. ",(0,r.kt)("inlineCode",{parentName:"li"},"host.docker.internal:8000")," in Nginx and ",(0,r.kt)("inlineCode",{parentName:"li"},"http://host.docker.internal:8000/api/broadcast")," as API endpoint for Django code.")),(0,r.kt)("h2",{id:"connect-to-posgresql"},"Connect to PosgreSQL"),(0,r.kt)("p",null,"Run from within example repo root:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker compose exec db psql postgresql://grandchat:grandchat@localhost:5432/grandchat\n")),(0,r.kt)("h2",{id:"inspect-dockerized-kafka-state"},"Inspect dockerized Kafka state"),(0,r.kt)("p",null,"List current Kafka topics (run from within example repo root):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker compose exec kafka kafka-topics --bootstrap-server kafka:9092 --list\n")),(0,r.kt)("p",null,"Describe the state of Kafka topic:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker compose exec kafka kafka-topics --bootstrap-server kafka:9092 --describe --topic postgres.public.chat_cdc\n")),(0,r.kt)("p",null,"Show state of consumer group \u2013 partitions, lag, offsets (",(0,r.kt)("inlineCode",{parentName:"p"},"centrifugo")," is a name of consumer group in our case):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker compose exec kafka kafka-consumer-groups --bootstrap-server kafka:9092 --describe --group centrifugo\n")),(0,r.kt)("p",null,"Tail new messages in topic:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker compose exec kafka kafka-console-consumer --bootstrap-server kafka:9092 --topic postgres.public.chat_cdc\n")),(0,r.kt)("h2",{id:"pause-kafka-connect"},"Pause Kafka Connect"),(0,r.kt)("p",null,"Or any other service in Docker compose when you need to test failure scenarios (use name of service from ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker compose pause connect\n")),(0,r.kt)("p",null,"To run again:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker compose unpause connect\n")))}u.isMDXComponent=!0}}]);