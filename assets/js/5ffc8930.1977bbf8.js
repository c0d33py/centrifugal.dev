"use strict";(self.webpackChunkcentrifugal_dev=self.webpackChunkcentrifugal_dev||[]).push([[630],{55084:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var n=i(85893),t=i(11151);const o={id:"performance",title:"Faster performance"},s=void 0,a={id:"pro/performance",title:"Faster performance",description:"Centrifugo PRO has performance improvements for several server parts. These improvements can help to reduce tail end-to-end latencies in the application, increase server throughput and/or reduce CPU usage on server machines. Our open-source version has a decent performance by itself, with PRO improvements Cenrifugo steps even further.",source:"@site/versioned_docs/version-4/pro/performance.md",sourceDirName:"pro",slug:"/pro/performance",permalink:"/docs/4/pro/performance",draft:!1,unlisted:!1,editUrl:"https://github.com/centrifugal/centrifugal.dev/edit/main/versioned_docs/version-4/pro/performance.md",tags:[],version:"4",frontMatter:{id:"performance",title:"Faster performance"},sidebar:"Pro",previous:{title:"CEL expressions",permalink:"/docs/4/pro/cel_expressions"},next:{title:"Singleflight",permalink:"/docs/4/pro/singleflight"}},c={},l=[{value:"Faster HTTP API",id:"faster-http-api",level:2},{value:"Faster GRPC API",id:"faster-grpc-api",level:2},{value:"Faster HTTP proxy",id:"faster-http-proxy",level:2},{value:"Faster GRPC proxy",id:"faster-grpc-proxy",level:2},{value:"Faster JWT decoding",id:"faster-jwt-decoding",level:2},{value:"Faster GRPC unidirectional stream",id:"faster-grpc-unidirectional-stream",level:2},{value:"Examples",id:"examples",level:2},{value:"Publish HTTP API",id:"publish-http-api",level:3},{value:"History HTTP API",id:"history-http-api",level:3}];function p(e){const r={h2:"h2",h3:"h3",p:"p",...(0,t.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("img",{src:"/img/logo_animated_fast.svg",width:"100px",height:"100px",align:"left",style:{marginRight:"10px",float:"left"}}),"\n",(0,n.jsx)(r.p,{children:"Centrifugo PRO has performance improvements for several server parts. These improvements can help to reduce tail end-to-end latencies in the application, increase server throughput and/or reduce CPU usage on server machines. Our open-source version has a decent performance by itself, with PRO improvements Cenrifugo steps even further."}),"\n",(0,n.jsx)(r.h2,{id:"faster-http-api",children:"Faster HTTP API"}),"\n",(0,n.jsx)(r.p,{children:"Centrifugo PRO has an optimized JSON serialization/deserialization for HTTP API."}),"\n",(0,n.jsx)(r.p,{children:"The effect can be noticeable under load. The exact numbers heavily depend on usage scenario. According to our benchmarks you can expect 10-15% more requests/sec for small message publications over HTTP API, and up to several times throughput boost when you are frequently get lots of messages from a history, see a couple of examples below."}),"\n",(0,n.jsx)(r.h2,{id:"faster-grpc-api",children:"Faster GRPC API"}),"\n",(0,n.jsx)(r.p,{children:"Centrifugo PRO has an optimized Protobuf serialization/deserialization for GRPC API. The effect can be noticeable under load. The exact numbers heavily depend on usage scenario."}),"\n",(0,n.jsx)(r.h2,{id:"faster-http-proxy",children:"Faster HTTP proxy"}),"\n",(0,n.jsx)(r.p,{children:"Centrifugo PRO has an optimized JSON serialization/deserialization for HTTP proxy. The effect can be noticeable under load. The exact numbers heavily depend on usage scenario."}),"\n",(0,n.jsx)(r.h2,{id:"faster-grpc-proxy",children:"Faster GRPC proxy"}),"\n",(0,n.jsx)(r.p,{children:"Centrifugo PRO has an optimized Protobuf serialization/deserialization for GRPC API. The effect can be noticeable under load. The exact numbers heavily depend on usage scenario."}),"\n",(0,n.jsx)(r.h2,{id:"faster-jwt-decoding",children:"Faster JWT decoding"}),"\n",(0,n.jsx)(r.p,{children:"Centrifugo PRO has an optimized decoding of JWT claims."}),"\n",(0,n.jsx)(r.h2,{id:"faster-grpc-unidirectional-stream",children:"Faster GRPC unidirectional stream"}),"\n",(0,n.jsx)(r.p,{children:"Centrifugo PRO has an optimized Protobuf deserialization for GRPC unidirectional stream. This only affects deserialization of initial connect command."}),"\n",(0,n.jsx)(r.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(r.p,{children:"Let's look at quick live comparisons of Centrifugo OSS and Centrifugo PRO regarding HTTP API performance."}),"\n",(0,n.jsx)(r.h3,{id:"publish-http-api",children:"Publish HTTP API"}),"\n",(0,n.jsxs)("video",{width:"100%",controls:!0,children:[(0,n.jsx)("source",{src:"/img/pro_api_publish_perf.mp4",type:"video/mp4"}),(0,n.jsx)(r.p,{children:"Sorry, your browser doesn't support embedded video."})]}),"\n",(0,n.jsx)(r.p,{children:"In this video you can see a 13% speed up for publish operation. But for more complex API calls with larger payloads the difference can be much bigger. See next example that demonstrates this."}),"\n",(0,n.jsx)(r.h3,{id:"history-http-api",children:"History HTTP API"}),"\n",(0,n.jsxs)("video",{width:"100%",controls:!0,children:[(0,n.jsx)("source",{src:"/img/pro_api_history_perf.mp4",type:"video/mp4"}),(0,n.jsx)(r.p,{children:"Sorry, your browser doesn't support embedded video."})]}),"\n",(0,n.jsx)(r.p,{children:"In this video you can see an almost 2x overall speed up while asking 100 messages from Centrifugo history API."})]})}function d(e={}){const{wrapper:r}={...(0,t.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},11151:(e,r,i)=>{i.d(r,{Z:()=>a,a:()=>s});var n=i(67294);const t={},o=n.createContext(t);function s(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);